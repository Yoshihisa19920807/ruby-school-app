%figure{:class => "attachment attachment--#{blob.representable? ? "preview" : "file"} attachment--#{blob.filename.extension}"}
  - p "if_blob"
  -# - p blob
  
  -# - p blob.image?
  -# - p "___if_blob"
  -# - p blob.representable?
  - p blob.video?
  - if blob.video?
    - p "video____"
    %video(controls="true" width="100%" preload="metadata")
      %source{src: rails_blob_url(blob), type:"#{blob.content_type}"}
    -# %video-js#player-id.vjs-theme-sea{ :controls => "", "data-setup" => "{\"liveui\": true,\"fluid\": true}", :preload => ""}
    -#   %source{:src => rails_blob_url(blob), :type => ""}
  - elsif blob.audio?
    %audio{:controls => ""}
      %source{:src => rails_blob_url(blob)}
        Your browser does not support the audio tag.

  - if blob.representable?
    = image_tag blob.representation(resize_to_limit: local_assigns[:in_gallery] ? [ 800, 600 ] : [ 1024, 768 ])
    
  %figcaption.attachment__caption
    - if caption = blob.try(:caption)
      = caption
    - else
      %span.attachment__name= blob.filename
      %span.attachment__size= number_to_human_size blob.byte_size
      = link_to rails_blob_path(blob, disposition: "preview") do
        .fa.fa-download
-# = link_to blob.filename, rails_blob_path(blob, disposition: "preview"), target: :_blank
-# = link_to blob.filename, rails_blob_path(blob, disposition: 'attachment'), target: :_blank

-# %figure{:class => "attachment attachment--#{blob.representable? ? "preview" : "file"} attachment--#{blob.filename.extension}"}
-#   - if blob.representable?
-#     = image_tag blob.representation(resize_to_limit: local_assigns[:in_gallery] ? [ 800, 600 ] : [ 1024, 768 ])
-#   %figcaption.attachment__caption
-#     - if caption = blob.try(:caption)
-#       = caption
-#     - else
-#       %span.attachment__name= blob.filename
-#       %span.attachment__size= number_to_human_size blob.byte_size
-#       = link_to rails_blob_path(blob, disposition: "preview"), target: :_blank do
-#         .fa.fa-download
-#       /= link_to blob.filename, rails_blob_path(blob, disposition: "preview"), target: :_blank
-#       /= link_to blob.filename, rails_blob_path(blob, disposition: 'attachment'), target: :_blank

-# hoge_____